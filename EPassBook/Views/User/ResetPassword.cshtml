@model EPassBook.Models.ResetPasswordViewModel
@{
    Layout = null;
}
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>E-PassBook</title>
    <link href="//maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" rel="stylesheet" id="bootstrap-css">
    <link href="~/Content/Landingpagecss/Logincss.css" rel="stylesheet" />
</head>
<body>
    <div class="col-lg-8 col-md-8 col-sm-8 col-xm-8">
        <div class="col login-sec">
            <h2 class="text-center">Reset your password</h2>
            @*@Html.ValidationSummary(false, "", new { @class = "text-danger" })*@
            @using (Html.BeginForm("ResetPassword", "User", FormMethod.Post))
            {
                <div style="display:none;">
                    <input type="text" id="fake_username" />
                    <input type="password" id="fake_password" />
                </div>

                <form class="login-form">
                    <div class="form-group">
                        <label for="exampleInputPassword1" class="text-uppercase">Old Password</label>
                        @Html.PasswordFor(model => model.oldPassword, new { @class = "form-control", placeholder = "Old Password" })
                        @Html.ValidationMessageFor(model => model.oldPassword, null, new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <label for="exampleInputPassword1" class="text-uppercase">New Password</label>
                        @Html.PasswordFor(model => model.newPassword, new { @class = "form-control", placeholder = "New Password" })
                        @Html.ValidationMessageFor(model => model.newPassword, null, new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <label for="exampleInputPassword1" class="text-uppercase">Confirm Password</label>
                        @Html.PasswordFor(model => model.confirmPassword, new { @class = "form-control", placeholder = "Confirm Password" })
                        @Html.ValidationMessageFor(model => model.confirmPassword, null, new { @class = "text-danger" })
                    </div>
                    <button type="submit" class="btn btn-login float-right">Submit</button>
                </form>
            }
        </div>
    </div>

</body>
</html>