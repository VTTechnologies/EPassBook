
@model EPassBook.Models.InstallmentDetailsViewModel
@{
    if (ViewBag.Message != null)
    {
        Layout = "~/Views/Shared/_Layout.cshtml";
    }
}
@*FormMethod.Post, new { enctype = "multipart/form-data" }))*@
@using (Html.BeginForm("ProjectEngineer", "WorkFlow", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>InstallmentDetailsViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group" style="display:none">
            @Html.LabelFor(model => model.InstallmentId, "InstallmentID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(m => m.InstallmentId)
            </div>
        </div>

        <div class="form-group" style="display:none">
            @Html.LabelFor(model => model.BeneficiaryId, "BeneficiaryId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(m => m.BeneficiaryId)
            </div>
        </div>

        <div class="form-group disabled">
            @Html.LabelFor(model => model.BeneficiaryAmnt, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BeneficiaryAmnt, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BeneficiaryAmnt, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group disabled">
            @Html.LabelFor(model => model.LoanAmnt, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LoanAmnt, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LoanAmnt, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group disabled">
            @Html.LabelFor(model => model.IsCentreAmnt, "State Assistance", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @*@Html.RadioButton("IsRadioButton", "State Assistance")*@
                    <input type="radio" name="IsRadioButton" id="isrdo_1_PM" value="State Assistance">@Html.Label("State Assistance")
                    @Html.ValidationMessageFor(model => model.IsCentreAmnt, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group disabled">
            @Html.LabelFor(model => model.IsCentreAmnt, "Central Assistance", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @*@Html.RadioButton("IsRadioButton", "Central Assistance")*@
                    <input type="radio" name="IsRadioButton" id="isrdo_2_PM" value="Central Assistance">@Html.Label("Central Assistance")
                    @Html.ValidationMessageFor(model => model.IsCentreAmnt, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group disabled">
            @Html.LabelFor(model => model.ConstructionLevel, "Via RTGS/DBT to the beneficiary for the plan as first instalmentafter digging of the foundation.", htmlAttributes: new { @class = "control-label col-md-7" })
            <div class="col-md-3">
                @Html.DropDownListFor(model => model.ConstructionLevel, new SelectList(new List<object> {
                                                                                       new{ value=0, text="A" },
                                                                                       new{ value=1, text="B" },
                                                                                       new{ value=2, text="C" },
                                                                                       },
                                                                                       "value",
                                                                                       "text"),"Select Items",
                                                                                       new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ConstructionLevel, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" style="display:none">
            @Html.LabelFor(model => model.StageID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StageID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StageID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" style="display:none">
            @Html.LabelFor(model => model.IsCompleted, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsCompleted)
                    @Html.ValidationMessageFor(model => model.IsCompleted, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group" style="display:none">
            @Html.LabelFor(model => model.InstallmentNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.InstallmentNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.InstallmentNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model._Comments, "Comments", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model._Comments, 5, 100, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model._Comments, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" style="display:none">
            @Html.LabelFor(model => model.CreatedDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreatedDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CreatedDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" style="display:none">
            @Html.LabelFor(model => model.CreatedBy, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreatedBy, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CreatedBy, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" style="display:none">
            @Html.LabelFor(model => model.ModifiedDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ModifiedDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ModifiedDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" style="display:none">
            @Html.LabelFor(model => model.ModifiedBy, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ModifiedBy, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ModifiedBy, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.HiddenFor(model => model.CompanyID, "Company ID")
            <div class="col-md-10">
                @Html.HiddenFor(m => m.CompanyID)
                @Html.ValidationMessageFor(model => model.CompanyID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ModifiedBy, "Upload Photo", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                <img id="imgsite_PM" src="" alt="your image" class="img-thumbnail col-md-12" style="height:200px" />
                <input type="file" value="Upload" id="imguploadsiteeng_PM" name="imguploadsiteeng_PM" onchange="readURL(this, 'imgsite_PM')" class="btn btn-primary col-md-7" />
                <input type="button" id="btnimg1cencal_PM" onclick="removeimg('imgsite_PM','imguploadsiteeng_PM')" value="Cancel" class="btn btn-danger col-md-4 pull-right" />
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @Html.CheckBox("ChkSign_PM", "no") @Html.Label("Site Engineer")
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <label id="lblmsg_PM" class="text-danger"></label>
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input id="hiddforRadio_PM"
                       name="hiddforRadio_PM"
                       type="hidden"
                       value="no" />
                <input id="hiddforCheckbox_PM"
                       name="hiddforCheckbox_PM"
                       type="hidden"
                       value="no" />
                <input type="submit" value="Create" onclick="return validation_PM();" class="btn btn-default" />
            </div>
        </div>
    </div>
}





@if (ViewBag.Message != null)
{
    <script type="text/javascript">
        window.onload = function () {            
            alert("submited successfully");
            window.location.href = "/WorkFlow/Index/";
        };
    </script>
}

<script type="text/javascript">

    $(document).ready(function () {
        //$("#isrdo_1_PM, #isrdo_2_PM").change(function () {
        //    if ($("#isrdo_1").is(":checked")) {
        //        $("#hiddforRadio").val("Checked");
        //    }
        //    else if ($("#isrdo_2").is(":checked")) {
        //        $("#hiddforRadio").val("Checked");
        //    }
        //});

        $("#ChkSign_PM").change(function () {
            if ($("#ChkSign_PM").is(":checked")) {
                $("#hiddforCheckbox_PM").val("Checked");
            }
        })
    });

    function validation_PM() {
        //if ($("#LoanAmnt").val().trim() == "") {
        //    $("#lblmsg").text("Please Enter Loan Amount");
        //    return false;
        //}
        //if ($("#hiddforRadio").val() == "no") {
        //    $("#lblmsg").text("Please select State Assistance or Center Assistance");
        //    return false;
        //}
        if ($("#hiddforCheckbox_PM").val() == "no") {
            $("#lblmsg_PM").text("Please sign in to confirm your submission");
            return false;
        }

        return true;
    }

    function readURL(input, id) {
        //alert(id);
        if (input.files && input.files[0]) {
            var reader = new FileReader();

            if (id == 'imgsite_PM') {
                reader.onload = function (e) {
                    $('#imgsite_PM')
                        .attr('src', e.target.result);
                };
            }

            reader.readAsDataURL(input.files[0]);
        }
    }

    function removeimg(img, fileupld) {
        document.getElementById(img).removeAttribute('src');
        document.getElementById(fileupld).value = "";

    }

</script>
